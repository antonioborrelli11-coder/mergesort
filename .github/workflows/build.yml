name: Build e Analisi SonarCloud

# Questo workflow si attiva su ogni push e pull request sul branch 'main'
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Un workflow può avere uno o più job. Qui ne definiamo uno chiamato 'build'.
jobs:
  build:
    # Specifica su quale tipo di macchina virtuale eseguire il job.
    # 'ubuntu-latest' è la scelta più comune per i progetti C/C++.
    runs-on: ubuntu-latest

    # I 'steps' sono i passaggi che il tuo job deve seguire in ordine.
    steps:
      # Step 1: Clona il tuo codice dalla repository. Questo è sempre il primo passo.
      - name: Checkout del Codice
        uses: actions/checkout@v4
      
      # Step 2: Installa il compilatore GCC e altri strumenti essenziali per la build.
      - name: Installa gli strumenti di compilazione C
        run: sudo apt-get update && sudo apt-get install -y gcc make

      # Step 3: Compila il programma C.
      - name: Compila il programma
        run: gcc -o main main.c

      # Step 4: Esegui il programma compilato.
      - name: Esegui il programma
        run: ./main

      # Step 5: Analisi del codice con SonarCloud
      # Utilizza il token salvato come segreto del repository
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=antonioborrelli11-coder_mergesort
            -Dsonar.organization=mergesort-1
